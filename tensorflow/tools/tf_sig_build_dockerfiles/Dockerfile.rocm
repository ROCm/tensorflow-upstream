################################################################################
FROM quay.io/pypa/manylinux2014_x86_64 as builder
################################################################################

# Install dependencies
COPY setup.packages.rocm.sh setup.packages.rocm.sh
COPY builder.packages.rocm.txt builder.packages.rocm.txt
RUN /setup.packages.rocm.sh /builder.packages.rocm.txt

# Install ROCM with devtoolset-10
ARG ROCM_VERSION
ENV ROCM_PATH=/opt/rocm-${ROCM_VERSION}
COPY setup.packages.rocm.sh /setup.packages.rocm.sh
COPY setup.rocm.sh /setup.rocm.sh
COPY devel.packages.rocm.txt /devel.packages.rocm.txt
RUN /setup.rocm.sh $ROCM_VERSION

# Install various tools.
# - bats: bash unit testing framework
# - bazelisk: always use the correct bazel version
# - buildifier: clean bazel build deps
# - buildozer: clean bazel build deps
# - gcloud SDK: communicate with Google Cloud Platform (GCP) for RBE, CI
RUN git clone --branch v1.7.0 https://github.com/bats-core/bats-core.git && bats-core/install.sh /usr/local && rm -rf bats-core
RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -O /usr/local/bin/bazel && chmod +x /usr/local/bin/bazel
RUN wget https://github.com/bazelbuild/buildtools/releases/download/3.5.0/buildifier -O /usr/local/bin/buildifier && chmod +x /usr/local/bin/buildifier
RUN wget https://github.com/bazelbuild/buildtools/releases/download/3.5.0/buildozer -O /usr/local/bin/buildozer && chmod +x /usr/local/bin/buildozer
RUN curl -sSL https://sdk.cloud.google.com >/tmp/gcloud && bash /tmp/gcloud --install-dir=~/usr/local/bin --disable-prompts

# All lines past this point are reset when $CACHEBUSTER is set. We need this
# for Python specifically because we install some nightly packages which are
# likely to change daily.
ARG CACHEBUSTER=0
RUN echo $CACHEBUSTER

# Setup Python environment. PYTHON_VERSION is e.g. "python3.8"
ARG PYTHON_VERSION
ENV PYTHON_LIB_PATH=/usr/local/lib/python${PYTHON_VERSION}/site-packages
ENV PYTHON_BIN_PATH=/usr/local/bin/python${PYTHON_VERSION}
COPY setup.python.rocm.sh /setup.python.rocm.sh
COPY devel.requirements.rocm.txt /devel.requirements.rocm.txt
RUN /setup.python.rocm.sh $PYTHON_VERSION /devel.requirements.rocm.txt

# Setup build and environment
COPY devel.usertools /usertools
COPY devel.bashrc /root/.bashrc

# Setup ENV variables for tensorflow pip build
ENV TF_NEED_ROCM=1
ENV TF_ROCM_GCC=1
ENV ROCM_TOOLKIT_PATH=${ROCM_PATH}
